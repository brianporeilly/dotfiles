---
# tasks file for ansible-role-macos-setup

- name: "Check HostName"
  command: scutil --get HostName
  register: check_hostname
  when: system_hostname is defined
  changed_when: no
  failed_when: no

- name: "Set HostName"
  command: "scutil --set HostName {{ system_hostname }}"
  when: system_hostname is defined and system_hostname != check_hostname.stdout
  become: yes
  register: set_hostname

- name: "Check LocalHostName"
  command: scutil --get LocalHostName
  register: check_localhostname
  when: system_hostname is defined
  changed_when: no

- name: "Set LocalHostName"
  command: "scutil --set LocalHostName {{ system_hostname }}"
  when: system_hostname is defined and system_hostname != check_localhostname.stdout
  become: yes
  register: set_localhostname

- name: "Check ComputerName"
  command: scutil --get ComputerName
  register: check_computername
  when: system_hostname is defined
  changed_when: no

- name: "Set ComputerName"
  command: "scutil --set ComputerName {{ system_hostname }}"
  when: system_hostname is defined and system_hostname != check_computername.stdout
  become: yes
  register: set_computername

- name: "Install custom hosts file"
  get_url:
    url: "{{ hosts_download_location }}"
    dest: /etc/hosts
  when: hosts_download_location is defined
  become: yes
  register: install_custom_hosts_file

- name: "Flush dns cache"
  command: dscacheutil -flushcache
  when: set_hostname.changed or set_localhostname.changed or set_computername.changed or install_custom_hosts_file.changed

# SSD stuff (all breaks?)
#- name: "Disable local Time Machine snapshots"
  #command: tmutil disablelocal
#- name: "Disable hibernation (speeds up entering sleep mode)"
  #command: pmset -a hibernatemode 0
#- name: "Remove the sleep image file to save disk space"
  #command: rm -rf /Private/var/vm/sleepimage
#- name: "Create a zero-byte sleep image file instead"
  #command: touch /Private/var/vm/sleepimage
#- name: "Make sure the sleep image file can’t be rewritten"
  #command: chflags uchg /Private/var/vm/sleepimage
#- name: "Disable the sudden motion sensor as it’s not useful for SSDs"
  #command: pmset -a sms 0

- name: "allow 'locate' command"
  command: launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
  become: yes
- name: "Disable the sound effects on boot"
  command: nvram SystemAudioVolume=" "
  become: yes
- name: "Always show scrollbars"
  command: defaults write -g AppleShowScrollBars -string "Always"
- name: "Increase window resize speed for Cocoa applications"
  command: defaults write -g NSWindowResizeTime -float 0.001
- name: "Expand save panel by default"
  command: defaults write -g NSNavPanelExpandedStateForSaveMode -bool true
- name: "Expand save panel by default"
  command: defaults write -g NSNavPanelExpandedStateForSaveMode2 -bool true

- name: "Expand print panel by default"
  command: defaults write -g PMPrintingExpandedStateForPrint -bool true
- name: "Expand print panel by default"
  command: defaults write -g PMPrintingExpandedStateForPrint2 -bool true

- name: "Save to disk (not to iCloud) by default"
  command: defaults write -g NSDocumentSaveNewDocumentsToCloud -bool false

- name: "Automatically quit printer app once the print jobs complete"
  command: defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

- name: "Disable the “Are you sure you want to open this application?” dialog"
  command: defaults write com.apple.LaunchServices LSQuarantine -bool false

- name: "Restart automatically if the computer freezes"
  command: systemsetup -setrestartfreeze on

- name: "Check for software updates daily, not just once per week"
  command: defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1


- name: "Trackpad: enable tap to click for this user and for the login screen"
  command: defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
- name: "Trackpad: enable tap to click for this user and for the login screen"
  command: defaults -currentHost write -g com.apple.mouse.tapBehavior -int 1
- name: "Trackpad: enable tap to click for this user and for the login screen"
  command: defaults write -g com.apple.mouse.tapBehavior -int 1

- name: "Disable 'natural' (Lion-style) scrolling"
  command: defaults write -g com.apple.swipescrolldirection -bool false

- name: "Increase sound quality for Bluetooth headphones/headsets"
  command: defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

- name: "Disable press-and-hold for keys in favor of key repeat"
  command: defaults write -g ApplePressAndHoldEnabled -bool false


- name: "Set a blazingly fast keyboard repeat rate"
  command: defaults write NSGlobalDomain KeyRepeat -int 2
- name: "Set a fast keyboard repeat rate"
  command: defaults write NSGlobalDomain InitialKeyRepeat -int 25

- name: "Disable auto-correct"
  command: defaults write -g NSAutomaticSpellingCorrectionEnabled -bool false
- name: "Disable auto-capitalize"
  command: defaults write -g NSAutomaticCapitalizationEnabled -bool false
- name: "Disable auto-period-substitution"
  command: defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false
- name: "Disable smart quotes as they’re annoying when typing code"
  command: defaults write -g NSAutomaticQuoteSubstitutionEnabled -bool false
- name: "Disable smart dashes as they’re annoying when typing code"
  command: defaults write -g NSAutomaticDashSubstitutionEnabled -bool false


- name: "Require password immediately after sleep or screen saver begins"
  command: defaults write com.apple.screensaver askForPassword -int 1
- name: "Require password immediately after sleep or screen saver begins"
  command: defaults write com.apple.screensaver askForPasswordDelay -int 0

- name: "Save screenshots to a custom location"
  command: defaults write com.apple.screencapture location -string "{{ screenshots_location }}"

- name: "Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)"
  command: defaults write com.apple.screencapture type -string "png"

- name: "Disable shadow in screenshots"
  command: defaults write com.apple.screencapture disable-shadow -bool true

- name: "Enable subpixel font rendering on non-Apple LCDs"
  command: defaults write -g AppleFontSmoothing -int 2

- name: "Enable HiDPI display modes (requires restart)"
  command: defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
  become: yes



#- name: "Keep folders on top when sorting by name (Sierra only)"
#  command: defaults write com.apple.finder _FXSortFoldersFirst -bool true

#- name: "Allow quitting via ⌘ + Q; doing so will also hide desktop icons"
#  command: defaults write com.apple.finder QuitMenuItem -bool true

- name: "Disable window animations and Get Info animations"
  command: defaults write com.apple.finder DisableAllAnimations -bool true

- name: "Set HOME as the default location for new Finder windows"
  command: defaults write com.apple.finder NewWindowTarget -string "PfLo"
- name: "Set HOME as the default location for new Finder windows"
  command: defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

#- name: "Show hidden files by default"
#  command: defaults write com.apple.finder AppleShowAllFiles -bool true

- name: "Show all filename extensions"
  command: defaults write -g AppleShowAllExtensions -bool true

- name: "Show status bar"
  command: defaults write com.apple.finder ShowStatusBar -bool true

- name: "Show path bar"
  command: defaults write com.apple.finder ShowPathbar -bool true

- name: "Allow text selection in Quick Look"
  command: defaults write com.apple.finder QLEnableTextSelection -bool true

- name: "Display full POSIX path as Finder window title"
  command: defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

- name: "When performing a search, search the current folder by default"
  command: defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

- name: "Disable the warning when changing a file extension"
  command: defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

- name: "Enable spring loading for directories"
  command: defaults write -g com.apple.springing.enabled -bool true

- name: "Remove the spring loading delay for directories"
  command: defaults write -g com.apple.springing.delay -float 0

- name: "Avoid creating .DS_Store files on network volumes"
  command: defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

#- name: "Disable disk image verification"
#  command: defaults write com.apple.frameworks.diskimages skip-verify -bool true
#- name: "Disable disk image verification"
#  command: defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
#- name: "Disable disk image verification"
#  command: defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

#- name: "Automatically open a new Finder window when a volume is mounted"
#  command: defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
#- name: "Automatically open a new Finder window when a volume is mounted"
#  command: defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
#- name: "Automatically open a new Finder window when a volume is mounted"
#  command: defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

#- name: "Use list view in all Finder windows by default"
# Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
#  command: defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

- name: "Disable the warning before emptying the Trash"
  command: defaults write com.apple.finder WarnOnEmptyTrash -bool false

- name: "Empty Trash securely by default"
  command: defaults write com.apple.finder EmptyTrashSecurely -bool true

#- name: "Enable AirDrop over Ethernet and on unsupported Macs running Lion"
#  command: defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

- name: "Show the ~/Library folder"
  command: "chflags nohidden ~/Library"

- name: "Prevent Time Machine from prompting to use new hard drives as backup volume"
  command: defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true


# install stuff

- name: "Check if oh-my-zsh is installed"
  stat:
    path: ~/.oh-my-zsh/oh-my-zsh.sh
  register: oh_my_zsh_check
  when: install_oh_my_zsh

- name: "Install oh-my-zsh"
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
  when: not oh_my_zsh_check.stat.exists and install_oh_my_zsh

- name: "Install pip packages"
  pip:
    name: "{{ pip_installed_packages }}"
    executable: pip3

- name: "Create directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items: directories_to_create

- name: "Install dotfiles"
  template:
    src: "templates/{{ item }}.j2"
    dest: "~/{{ item }}"
  with_items: "{{ dotfiles }}"
